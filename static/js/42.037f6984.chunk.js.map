{"version":3,"file":"static/js/42.037f6984.chunk.js","mappings":"sOACA,EAA0B,wBAA1B,EAA4D,wB,SCI7C,SAASA,IAAgB,IAAD,gBACnC,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAUC,EAAAA,EAAAA,MACVC,EAAY,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,EAAS,UAAGL,EAASG,aAAZ,aAAG,EAAgBC,KAAKE,OAQvC,OANAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBV,GAASW,MAAK,SAAAC,GAC1Bb,EAAQa,EACX,GACJ,GAAE,CAACZ,IAEGF,IACH,4BACI,SAAC,KAAD,CAAMe,GAAIT,EAAV,UACI,2CAGJ,iBAAKU,UAAWC,EAAhB,WACI,gBAAKC,IAAG,0CAAqClB,EAAKmB,aAAeC,IAAI,GAAGC,MAAO,OAC/E,iBAAKL,UAAWC,EAAhB,WACI,0BAAKjB,EAAKsB,MAAV,IAAkB,IAAIC,KAAKvB,EAAKwB,cAAcC,cAA9C,QACA,yCAAe,4BAAQC,KAAKC,MAA0B,GAApB3B,EAAK4B,cAAxB,YAEf,sCACA,uBAAI5B,EAAK6B,YAET,oCACA,kCACK7B,EAAK8B,cADV,aACK,EAAaC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACb,wBAAcA,GAALD,EADI,aAM9B,mDACA,2BACI,wBACwC,OAAnC,UAAA5B,EAASG,aAAT,mBAAgBC,YAAhB,eAAsB0B,WACnB,SAAC,KAAD,CAAMnB,GAAG,OAAOR,MAAO,CAAEC,KAAK,KAA9B,mBACA,SAAC,KAAD,CAAMO,GAAG,OAAOR,MAAO,CAAEC,KAAK,UAAD,OAAYC,IAAzC,qBAGR,wBACwC,OAAnC,UAAAL,EAASG,aAAT,mBAAgBC,YAAhB,eAAsB0B,WACnB,SAAC,KAAD,CAAMnB,GAAG,UAAUR,MAAO,CAAEC,KAAK,KAAjC,sBACA,SAAC,KAAD,CAAMO,GAAG,UAAUR,MAAO,CAAEC,KAAK,UAAD,OAAYC,IAA5C,2BAIZ,SAAC,EAAA0B,SAAD,CAAUC,UAAU,wCAApB,UACI,SAAC,KAAD,QAIf,C,2MC3DKC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACUC,IAAAA,IAAA,kEAAqEF,IAC7ExB,MAAK,SAAA2B,GAAG,OAAIA,EAAIxC,IAAR,IAFV,0GAKA,SAAeyC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,iFACUH,IAAAA,IAAA,4DAA+DF,EAA/D,4DAA0HK,IAClI7B,MAAK,SAAA2B,GAAG,OAAIA,EAAIxC,IAAR,IAFV,0GAKA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA+B+B,GAA/B,iFACUJ,IAAAA,IAAA,6CAAgDI,EAAhD,oBAA8DN,EAA9D,oBACRxB,MAAK,SAAA2B,GAAG,OAAIA,EAAIxC,IAAR,IAFV,0GAKA,SAAe4C,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iFACUJ,IAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,oBACRxB,MAAK,SAAA2B,GAAG,OAAIA,EAAIxC,IAAR,IAFV,0GAKA,SAAe6C,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,iFACUJ,IAAAA,IAAA,6CAAgDI,EAAhD,4BAAsEN,EAAtE,2BACRxB,MAAK,SAAA2B,GAAG,OAAIA,EAAIxC,IAAR,IAFV,0G","sources":["webpack://goit-react-hw-05-movies/./src/components/styles/styles.module.css?87fd","components/MovieDetails.jsx","services/fetchApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmImg\":\"styles_filmImg__Bxusx\",\"padding\":\"styles_padding__vTTsG\"};","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { getMovieDetails } from \"../services/fetchApi\";\nimport s from \"./styles/styles.module.css\";\n\nexport default function MovieDetails() {\n    const [data, setData] = useState([]);\n    const { movieId } = useParams();\n    const location= useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    const movieName = location.state?.from.search;\n\n    useEffect(() => {\n        getMovieDetails(movieId).then(movie => {\n            setData(movie)\n        });\n    }, [movieId]);\n\n    return data && (\n        <div>\n            <Link to={backLinkHref}>\n                <button>Go back</button>\n            </Link>\n            \n            <div className={s.filmImg}>\n                <img src={`https://image.tmdb.org/t/p/w500/${data.poster_path}`} alt=\"\" width={250} />\n                <div className={s.padding}>\n                    <h2>{data.title}({new Date(data.release_date).getFullYear()})</h2>\n                    <p>User score: <span>{(Math.round(data.vote_average * 10))} %</span></p>\n\n                    <h3>Overview</h3>\n                    <p>{data.overview}</p>\n            \n                    <h4>Genres</h4>\n                    <ul>\n                        {data.genres?.map(({ id, name }) =>\n                            (<li key={id}>{name}</li>)\n                        )}\n                    </ul>\n                </div>\n            </div>\n            <p>Adittional information</p>\n            <ul>\n                <li>\n                    {location.state?.from?.pathname === '/' ?\n                        <Link to='cast' state={{ from: `/` }}>Cast</Link> :\n                        <Link to='cast' state={{ from: `/movies${movieName}` }}>Cast</Link>\n                    }\n                </li>\n                <li>\n                    {location.state?.from?.pathname === '/' ?\n                        <Link to='reviews' state={{ from: `/` }}>Reviews</Link> :\n                        <Link to='reviews' state={{ from: `/movies${movieName}` }}>Reviews</Link>\n                    }\n                </li>\n            </ul>\n            <Suspense fallback={<div>Loading...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n}","import axios from 'axios';\n\nconst API_KEY = '0eaaf2516690b5ff52877c678f040000';\n\nexport async function getTrending() {\n    return await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n        .then(res => res.data)\n}\n\nexport async function searchMovie(searchQuery) {\n    return await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(res => res.data)\n}\n\nexport async function getMovieDetails(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}?api_key=${API_KEY}&language=en-US`)\n        .then(res => res.data)\n}\n\nexport async function getMovieCredits(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => res.data)\n}\n\nexport async function getMovieReviews(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => res.data)\n}"],"names":["MovieDetails","useState","data","setData","movieId","useParams","location","useLocation","backLinkHref","state","from","movieName","search","useEffect","getMovieDetails","then","movie","to","className","s","src","poster_path","alt","width","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","id","name","pathname","Suspense","fallback","API_KEY","getTrending","axios","res","searchMovie","searchQuery","ID","getMovieCredits","getMovieReviews"],"sourceRoot":""}