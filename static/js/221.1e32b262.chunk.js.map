{"version":3,"file":"static/js/221.1e32b262.chunk.js","mappings":"gPAIe,SAASA,IAAgB,IAAD,EACnC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAoC,GAE7CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACY,KAAdJ,IAGJK,EAAAA,EAAAA,IAAYL,GAAWM,MAAK,SAAAC,GACxBX,EAAUW,EAAMC,QACnB,GACJ,GAAE,CAACR,IAcJ,OACI,iCACI,kBAAMS,SAdO,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASd,UAAUe,MAErB,KAAjBH,EAAMI,SAIVjB,EAAgB,CAAEC,UAAWY,IAC7BF,EAAEG,OAAOI,QACZ,EAIO,WACI,kBACIC,KAAK,OACLC,KAAK,YACLC,YAAY,mBAChB,mBAAQF,KAAK,SAAb,wBAEJ,wBACKvB,EAAO0B,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMxB,GAAlC,SACKoB,KAFAC,EADD,QAS3B,C,2MCjDKI,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACUC,IAAAA,IAAA,kEAAqEF,IAC7ErB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAFV,0GAKA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA2B2B,GAA3B,iFACUH,IAAAA,IAAA,4DAA+DF,EAA/D,4DAA0HK,IAClI1B,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAFV,0GAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iFACUL,IAAAA,IAAA,6CAAgDK,EAAhD,oBAA8DP,EAA9D,oBACRrB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAFV,0GAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iFACUL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,EAAtE,oBACRrB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAFV,0GAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,iFACUL,IAAAA,IAAA,6CAAgDK,EAAhD,4BAAsEP,EAAtE,2BACRrB,MAAK,SAAAwB,GAAG,OAAIA,EAAIC,IAAR,IAFV,0G","sources":["components/Movies.jsx","services/fetchApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { searchMovie } from \"../services/fetchApi\";\n\nexport default function SearchMovies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get(\"movieName\") ?? '';\n\n    const location = useLocation();\n\n    useEffect(() => {\n        if (movieName === '') {\n            return;\n        }\n        searchMovie(movieName).then(movie => {\n            setMovies(movie.results)\n        })\n    }, [movieName]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const query = e.target.elements.movieName.value;\n\n        if (query.trim() === '') {\n            return;\n        }\n\n        setSearchParams({ movieName: query });\n        e.target.reset();\n    };\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    name='movieName'\n                    placeholder=\"Search movies\" />\n                <button type=\"submit\">Search</button>\n            </form>\n            <ul>\n                {movies.map(({ title, id }) =>\n                    <li key={id}>\n                        <Link to={`${id}`} state={{ from: location }}>\n                            {title}\n                        </Link>\n                    </li>)}\n            </ul>\n        </>\n    );\n};","import axios from 'axios';\n\nconst API_KEY = '0eaaf2516690b5ff52877c678f040000';\n\nexport async function getTrending() {\n    return await axios.get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n        .then(res => res.data)\n}\n\nexport async function searchMovie(searchQuery) {\n    return await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${searchQuery}`)\n        .then(res => res.data)\n}\n\nexport async function getMovieDetails(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}?api_key=${API_KEY}&language=en-US`)\n        .then(res => res.data)\n}\n\nexport async function getMovieCredits(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}/credits?api_key=${API_KEY}&language=en-US`)\n        .then(res => res.data)\n}\n\nexport async function getMovieReviews(ID) {\n    return await axios.get(`https://api.themoviedb.org/3/movie/${ID}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n        .then(res => res.data)\n}"],"names":["SearchMovies","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","searchMovie","then","movie","results","onSubmit","e","preventDefault","query","target","elements","value","trim","reset","type","name","placeholder","map","title","id","to","state","from","API_KEY","getTrending","axios","res","data","searchQuery","getMovieDetails","ID","getMovieCredits","getMovieReviews"],"sourceRoot":""}